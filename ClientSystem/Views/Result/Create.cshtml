@model ClientSystem.Models.Result

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <section class="content" style="text-align:center;margin-left:500px">
        <div class="row">

            <div class="col-md-6">

                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Result Add</h3>
                    </div>
                    <form role="form">
                        <div class="box-body">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.ExamType, "Exam Type", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div>
                                    @Html.DropDownListFor(model => model.ExamType,new List<SelectListItem> {
                                   new SelectListItem(){Text="Mid Term",Value="MidTerm"},
                                   new SelectListItem(){Text="Final",Value="Final"}

                               },"--Select--", htmlAttributes: new { @class = "form-control" })

                                    @Html.ValidationMessageFor(model => model.ExamType, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.StudentProfileId, "Student Name", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div>
                                    @Html.DropDownList("StudentProfileId", null, "--Select--", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.StudentProfileId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.DepartmentId, "Department", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div>
                                    @Html.DropDownList("DepartmentId", null, "--Select--", htmlAttributes: new { @class = "form-control", @id = "did" })
                                    @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SubjectId, "Subject", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div>
                                    @Html.DropDownList("SubjectId", null, "--Select--", htmlAttributes: new { @class = "form-control", @id = "sid" })
                                    @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Marks, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div>
                                    @Html.EditorFor(model => model.Marks, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Marks, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </section>
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript">

        $(document).ready(function () {
            //Dropdownlist Selectedchange event
            $("#did").change(function () {

                $("#sid").empty();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetSubjectByDepartment")',
                    dataType: 'json',
                    data: { id: $("#did").val() },
                    success: function (mems) {
                        
                        $.each(mems, function (i,member) {
                            $("#sid").append('<option value="'
                                + member.Value + '">'
                                + member.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            })
        });
</script>
